// <auto-generated />
using System;
using CyberEra_Server_new.Control;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CyberEra_Server_new.Migrations
{
    [DbContext(typeof(CyberEraContext))]
    partial class CyberEraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.BuyedFood", b =>
                {
                    b.Property<int?>("ComputerId")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ShopItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeForPlaying")
                        .HasColumnType("datetime");

                    b.HasIndex("ComputerId");

                    b.HasIndex("ShopItemId");

                    b.ToTable("BuyedFood", (string)null);
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.Computer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZoneId");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.ComputerApp", b =>
                {
                    b.Property<string>("AppName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AppVersion")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("ComputerId")
                        .HasColumnType("int");

                    b.HasIndex("ComputerId");

                    b.ToTable("ComputerApps");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.ComputersIp", b =>
                {
                    b.Property<int?>("ComputerId")
                        .HasColumnType("int");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasIndex("ComputerId");

                    b.ToTable("ComputersIp", (string)null);
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.ComputersLastActivity", b =>
                {
                    b.Property<int?>("ComputerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeActivity")
                        .HasColumnType("datetime");

                    b.HasIndex("ComputerId");

                    b.ToTable("ComputersLastActivity", (string)null);
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.ComputersPassword", b =>
                {
                    b.Property<int?>("ComputerId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeForPlaying")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("ComputerId");

                    b.HasIndex("UserId");

                    b.ToTable("ComputersPasswords");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.Log", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LogContext")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("TimeCreation")
                        .HasColumnType("datetime");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.Review", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nchar(500)")
                        .IsFixedLength();

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .IsFixedLength();

                    b.Property<short?>("Stars")
                        .HasColumnType("smallint");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.ShopItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<float?>("Cost")
                        .HasColumnType("real");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ImageSrc")
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.Zone", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.BuyedFood", b =>
                {
                    b.HasOne("CyberEra_Server_new.Model.DBModels.Computer", "Computer")
                        .WithMany()
                        .HasForeignKey("ComputerId")
                        .HasConstraintName("FK_Таблица1_Computers");

                    b.HasOne("CyberEra_Server_new.Model.DBModels.ShopItem", "ShopItem")
                        .WithMany()
                        .HasForeignKey("ShopItemId")
                        .HasConstraintName("FK_Таблица1_ShopItems");

                    b.Navigation("Computer");

                    b.Navigation("ShopItem");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.Computer", b =>
                {
                    b.HasOne("CyberEra_Server_new.Model.DBModels.Zone", "Zone")
                        .WithMany("Computers")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_Computers_Zones");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.ComputerApp", b =>
                {
                    b.HasOne("CyberEra_Server_new.Model.DBModels.Computer", "Computer")
                        .WithMany()
                        .HasForeignKey("ComputerId")
                        .HasConstraintName("FK_ComputerApps_Computers");

                    b.Navigation("Computer");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.ComputersIp", b =>
                {
                    b.HasOne("CyberEra_Server_new.Model.DBModels.Computer", "Computer")
                        .WithMany()
                        .HasForeignKey("ComputerId")
                        .HasConstraintName("FK_ComputersIp_Computers");

                    b.Navigation("Computer");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.ComputersLastActivity", b =>
                {
                    b.HasOne("CyberEra_Server_new.Model.DBModels.Computer", "Computer")
                        .WithMany()
                        .HasForeignKey("ComputerId")
                        .HasConstraintName("FK_Table_1_Computers");

                    b.Navigation("Computer");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.ComputersPassword", b =>
                {
                    b.HasOne("CyberEra_Server_new.Model.DBModels.Computer", "Computer")
                        .WithMany()
                        .HasForeignKey("ComputerId")
                        .HasConstraintName("FK_ComputersPasswords_Computers");

                    b.HasOne("CyberEra_Server_new.Model.DBModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ComputersPasswords_Users");

                    b.Navigation("Computer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.User", b =>
                {
                    b.HasOne("CyberEra_Server_new.Model.DBModels.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Users_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CyberEra_Server_new.Model.DBModels.Zone", b =>
                {
                    b.Navigation("Computers");
                });
#pragma warning restore 612, 618
        }
    }
}
